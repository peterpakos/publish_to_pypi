#!/usr/bin/env bash
#
# Tool to package and publish Python projects on PyPI
#
# It requires 'pypi' and 'testpypi' sections to be defined in .pypirc.
#
# Copyright (c) 2018 Peter Pakos. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -euo pipefail

readonly APP_NAME="$(basename "$0")"
readonly APP_VER="1.3.0"
test=""

display_version() {
  printf "%s %s\\n" "$APP_NAME" "$APP_VER"
}

display_help() {
  display_version
  cat <<HELP
Usage: ${APP_NAME} [OPTIONS]
AVAILABLE OPTIONS:
-v  Print version number
-h  Print this help summary page
-t  Publish to Test PyPI
-c  Cleanup only
HELP
}

get_opts() {
  while getopts ":vhtc" opt; do
    case $opt in
      v)
        display_version
        exit 0
        ;;
      h)
        display_help
        exit 0
        ;;
      t)
        test="test"
        ;;
      c)
        cleanup
        exit 0
        ;;
      :)
        printf "Option -%s requires an argument\n" "$OPTARG"
        exit 1
        ;;
      *)
        printf "Invalid option -%s\n" "$OPTARG"
        exit 1
        ;;
    esac
  done
}

pip_twine() {
  if ! pip list | grep -q '^twine\s'; then
    pip -q install twine
  fi
}

cleanup() {
  rm -rf ./build ./dist ./*.egg-info ./__pycache__ ./*/*.pyc ./*/__pycache__ ./.tox
}

check_project_dir() {
  if [[ ! -f "./setup.py" || $(find . -name '*.py' -type f | wc -l) -eq 0 ]]; then
    printf "Not in Python project directory, exiting...\\n" >&2
    exit 1
  fi
}

main() {
  get_opts "$@"
  check_project_dir
  pip_twine
  cleanup
  python setup.py package
  twine upload -r "${test}pypi" --skip-existing dist/* || true
  cleanup
}

main "$@"
